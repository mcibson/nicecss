/* ============================================================================
   NICE GRID
=============================================================================== */
// WARNING: don't change anything in this file, except you know what you are doing

/* Don't use Flex Shorthands as long as you support IE10 */

/* Breakpoints
=============================================================================== */
$media--s:    nth(map-get($gridmap, media--s),   1);     // mobile landscape
$media--m:    nth(map-get($gridmap, media--m),   1);     // tablet portrait
$media--l:    nth(map-get($gridmap, media--l),   1);     // notebook, netbook, tablet landscape
$media--xl:   nth(map-get($gridmap, media--xl),  1);     // desktop
$media--xxl:  nth(map-get($gridmap, media--xxl), 1);     // HD+


/* Spacer - Gutter - Standard Paddings and Margins for the Grid
=============================================================================== */
$spacer:      nth(map-get($gridmap, default),    2);
$spacer--s:   nth(map-get($gridmap, media--s),   2);
$spacer--m:   nth(map-get($gridmap, media--m),   2);
$spacer--l:   nth(map-get($gridmap, media--l),   2);
$spacer--xl:  nth(map-get($gridmap, media--xl),  2);
$spacer--xxl: nth(map-get($gridmap, media--xxl), 2);


/* Outer Spacer -- Padding on boxed Container
=============================================================================== */
$outer:       nth(map-get($gridmap, default),    3);
$outer--s:    nth(map-get($gridmap, media--s),   3);
$outer--m:    nth(map-get($gridmap, media--m),   3);
$outer--l:    nth(map-get($gridmap, media--l),   3);
$outer--xl:   nth(map-get($gridmap, media--xl),  3);
$outer--xxl:  nth(map-get($gridmap, media--xxl), 3);

/* Container -- Margin Bottom
=============================================================================== */
$container__margin-bottom:      1rem; // default value -- needs to be set
$container__margin-bottom--s:   false;
$container__margin-bottom--m:   false;
$container__margin-bottom--l:   false;
$container__margin-bottom--xl:  false;
$container__margin-bottom--xxl: false;
/* Helper Functions
=============================================================================== */
@function get_card_spacer_for($breakpoint) {
    $target: $spacer;
    @if $spacer--s != false and $breakpoint >= $media--s {
        $target: $spacer--s;
    }
    @if $spacer--m != false and $breakpoint >= $media--m {
        $target: $spacer--m;
    }
    @if $spacer--l != false and $breakpoint >= $media--l {
        $target: $spacer--l;
    }
    @if $spacer--xl != false and $breakpoint >= $media--xl {
        $target: $spacer--xl;
    }
    @if $spacer--xxl != false and $breakpoint >= $media--xxl {
        $target: $spacer--xxl;
    }

    @return $target;
}


/* Containers
=============================================================================== */

/* Container Base Mixins
========================== */
@mixin container__padding {
    @if $outer != false {
        padding-left: $outer;
        padding-right: $outer; }

    @include breakpoint($media--s) {
        @if $outer--s != false {
            padding-left: $outer--s;
            padding-right: $outer--s; } }

    @include breakpoint($media--m) {
        @if $outer--m != false {
            padding-left: $outer--m;
            padding-right: $outer--m; } }

    @include breakpoint($media--l) {
        @if $outer--l != false {
            padding-left: $outer--l;
            padding-right: $outer--l; } }

    @include breakpoint($media--xl) {
        @if $outer--xl != false {
            padding-left: $outer--xl;
            padding-right: $outer--xl; } }

    @include breakpoint($media--xxl) {
        @if $outer--xxl != false {
            padding-left: $outer--xxl;
            padding-right: $outer--xxl; } }
}


/* Boxed Container */
@mixin container {
    @include container__padding;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    width: 100%;
    max-width: $maxWidth;
    margin: 0 auto $container__margin-bottom;
    @include jacket(ie) {
        margin: 0 auto $container__margin-bottom;
    }
}

/* Full Width Container */
@mixin container--fluid {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    width: 100%;
    margin: 0 auto;
}

/* Nested Container */
@mixin container--nospace {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    width: 100%;
    max-width: $maxWidth;
    margin: 0 auto;
}

/* Single Row Container - nowrap - boxed  */
@mixin container--row {
    @include container__padding;
    display: flex;
    flex-wrap: nowrap;
}


/* Grid Base Mixins
=============================================================================== */
/** $s, $m, $l ... are the predefined breakpoints
 *  @$default ... no breakpoint - Standard
 *  width(12, $m:6, $l: 4) means:
 *      width: 100%;
 *      @breakpoint($media--m) {width: 50%;}
 *      @breakpoint($media--l) {width: 33.33333;}
 */
@mixin width        ($default:12, $s:false, $m:false, $l:false, $xl:false, $xxl:false, $cols:12) {
    width: percentage($default / $cols);
    @if $s != false {
        @include breakpoint($media--s) {
            @if $s < 1 {
                width: percentage($s);
            } @else {
                width: percentage($s / $cols);
            }
        }
    }
    @if $m != false  {
        @include breakpoint($media--m) {
            @if $m < 1 {
                width: percentage($m);
            } @else {
                width: percentage($m / $cols);
            }
        }
    }
    @if $l != false  {
        @include breakpoint($media--l) {
            @if $l < 1 {
                width: percentage($l);
            } @else {
                width: percentage($l / $cols);
            }
        }
    }
    @if $xl != false  {
        @include breakpoint($media--xl) {
            @if $xl < 1 {
                width: percentage($xl);
            } @else {
                width: percentage($xl / $cols);
            }
        }
    }
    @if $xxl != false  {
        @include breakpoint($media--xl) {
            @if $xl < 1 {
                width: percentage($xxl);
            } @else {
                width: percentage($xxl / $cols);
            }
        }
    }
}

/* calculated width if box has side margins */
@mixin width--card  ($default:12, $s:false, $m:false, $l:false, $xl:false, $xxl:false, $cols:12) {

    width: calc(#{percentage($default / $cols)} - #{2 * $spacer});

    @if $s   != false or $spacer--s   != false {
        $spacer: get_card_spacer_for($media--s);
        @include breakpoint($media--s) {
            @if $s != false {
                @if $s < 1 {
                    width: calc(#{percentage($s)} - #{2 * $spacer});
                } @else {
                    width: calc(#{percentage($s / $cols)} - #{2 * $spacer});
                }
            } @else {
                $width: $default;
                @if $width < 1 {
                    width: calc(#{percentage($width)} - #{2 * $spacer});
                } @else {
                    width: calc(#{percentage($width / $cols)} - #{2 * $spacer});
                }
            }
        }
    }

    @if $m   != false or $spacer--m   != false {
        $spacer: get_card_spacer_for($media--m);
        @include breakpoint($media--m) {
            @if $m != false {
                @if $m < 1 {
                    width: calc(#{percentage($m)} - #{2 * $spacer});
                } @else {
                    width: calc(#{percentage($m / $cols)} - #{2 * $spacer});
                }
            } @else {
                // get the last width;
                $width: $default;
                @if $s != false {
                    $width: $s;
                }
                @if $width < 1 {
                    width: calc(#{percentage($width)} - #{2 * $spacer});
                } @else {
                    width: calc(#{percentage($width / $cols)} - #{2 * $spacer});
                }
            }
        }
    }

    @if $l   != false or $spacer--l   != false {
        $spacer: get_card_spacer_for($media--l);
        @include breakpoint($media--l) {
            @if $l != false {
                @if $l < 1 {
                    width: calc(#{percentage($l)} - #{2 * $spacer});
                } @else {
                    width: calc(#{percentage($l / $cols)} - #{2 * $spacer});
                }
            } @else {
                // get the last width;
                $width: $default;
                @if $m != false {
                    $width: $m;
                } @else if $s != false {
                    $width: $s;
                }
                @if $width < 1 {
                    width: calc(#{percentage($width)} - #{2 * $spacer});
                } @else {
                    width: calc(#{percentage($width / $cols)} - #{2 * $spacer});
                }
            }
        }
    }

    @if $xl  != false or $spacer--xl  != false {
        $spacer: get_card_spacer_for($media--xl);
        @include breakpoint($media--xl) {
            @if $l != false {
                @if $l < 1 {
                    width: calc(#{percentage($l)} - #{2 * $spacer});
                } @else {
                    width: calc(#{percentage($l / $cols)} - #{2 * $spacer});
                }
            } @else {
                // get the last width;
                $width: $default;
                @if $l != false {
                    $width: $l;
                } @else if $m != false {
                    $width: $m;
                } @else if $s != false {
                    $width: $s;
                }

                @if $width < 1 {
                    width: calc(#{percentage($width)} - #{2 * $spacer});
                } @else {
                    width: calc(#{percentage($width / $cols)} - #{2 * $spacer});
                }
            }
        }
    }

    @if $xxl != false or $spacer--xxl != false {
        $spacer: get_card_spacer_for($media--xxl);
        @include breakpoint($media--xxl) {
            // If width is set for this Breakpoint
            @if $l != false {
                @if $l < 1 {
                    width: calc(#{percentage($l)} - #{2 * $spacer});
                } @else {
                    width: calc(#{percentage($l / $cols)} - #{2 * $spacer});
                }
            } @else {
                // If width is not set, get width of next smaller set width

                $width: $default;
                @if $xl != false {
                    $width: $xl;
                } @else if $l != false {
                    $width: $l;
                } @else if $m != false {
                    $width: $m;
                } @else if $s != false {
                    $width: $s;
                }

                @if $width < 1 {
                    width: calc(#{percentage($width)} - #{2 * $spacer});
                } @else {
                    width: calc(#{percentage($width / $cols)} - #{2 * $spacer});
                }
            }
        }
    }
}

// padding on all sides or custom($top*$spacer, $right*$spacer ...)
// $top:1 ... padding-top: $spacer;
// $top:2 ... padding-top: 2*$spacer;
@mixin padding($top:false, $right: false, $bottom: false, $left: false){
    // if custom value in Padding
    @if $top != false or false != false or false != false or $left != false {
        @if $top == false {
            $top: 0;
        }
        @if $right == false {
            $right: 0;
        }
        @if $bottom == false {
            $bottom: 0;
        }
        @if $left == false {
            $left: 0;
        }
        padding: $top*$spacer $right*$spacer $bottom*$spacer $left*$spacer;
        @if $spacer--s != false {
            @include breakpoint($media--s) {
                padding: $top*$spacer--s $right*$spacer--s $bottom*$spacer--s $left*$spacer--s; } }

        @if $spacer--m != false {
            @include breakpoint($media--m) {
                padding: $top*$spacer--m $right*$spacer--m $bottom*$spacer--m $left*$spacer--m; } }

        @if $spacer--l != false {
            @include breakpoint($media--l) {
                padding: $top*$spacer--l $right*$spacer--l $bottom*$spacer--l $left*$spacer--l;} }

        @if $spacer--xl != false {
            @include breakpoint($media--xl) {
                padding: $top*$spacer--xl $right*$spacer--xl $bottom*$spacer--xl $left*$spacer--xl;} }

        @if $spacer--xxl != false {
            @include breakpoint($media--xxl) {
                padding: $top*$spacer--xxl $right*$spacer--xxl $bottom*$spacer--xxl $left*$spacer--xxl; } }

    } @else {
        // if default (false)
        padding: $spacer;

        @if $spacer--s != false {
            @include breakpoint($media--s) {
                padding: $spacer--s; } }

        @if $spacer--m != false {
            @include breakpoint($media--m) {
                padding: $spacer--m;} }

        @if $spacer--l != false {
            @include breakpoint($media--l) {
                padding: $spacer--l;} }

        @if $spacer--xl != false {
            @include breakpoint($media--xl) {
                padding: $spacer--xl;} }

        @if $spacer--xxl != false {
            @include breakpoint($media--xxl) {
                padding: $spacer--xxl;} }
    }
}

// padding left, right and bottom -- no padding top
@mixin padding--default() { // padding left, right and double bottom
    padding: 0 $spacer 2*$spacer;

    @if $spacer--s != false {
        @include breakpoint($media--s) {
            padding: 0 $spacer--s 2*$spacer--s; } }

    @if $spacer--m != false {
        @include breakpoint($media--m) {
            padding: 0 $spacer--m 2*$spacer--m;} }

    @if $spacer--l != false {
        @include breakpoint($media--l) {
            padding: 0 $spacer--l 2*$spacer--l;} }

    @if $spacer--xl != false {
        @include breakpoint($media--xl) {
            padding: 0 $spacer--xl 2*$spacer--xl;} }

    @if $spacer--xxl != false {
        @include breakpoint($media--xxl) {
            padding: 0 $spacer--xxl 2*$spacer--xxl;} }
}

// padding on sides
@mixin padding--horizontal(){
    padding-left: $spacer;
    padding-right: $spacer;

    @if $spacer--s != false {
        @include breakpoint($media--s) {
            padding-left: $spacer--s;
            padding-right: $spacer--s; } }

    @if $spacer--m != false {
        @include breakpoint($media--m) {
            padding-left: $spacer--m;
            padding-right: $spacer--m; } }

    @if $spacer--l != false {
        @include breakpoint($media--l) {
            padding-left: $spacer--l;
            padding-right: $spacer--l; } }

    @if $spacer--xl != false {
        @include breakpoint($media--xl) {
            padding-left: $spacer--xl;
            padding-right: $spacer--xl; } }

    @if $spacer--xxl != false {
        @include breakpoint($media--xxl) {
            padding-left: $spacer--xxl;
            padding-right: $spacer--xxl; } }
}

// margin on all sides
@mixin margin() { // margin on all sides
    margin: $spacer;

    @if $spacer--s != false {
        @include breakpoint($media--s) {
            margin: $spacer--s; } }

    @if $spacer--m != false {
        @include breakpoint($media--m) {
            margin: $spacer--m;} }

    @if $spacer--l != false {
        @include breakpoint($media--l) {
            margin: $spacer--l;} }

    @if $spacer--xl != false {
        @include breakpoint($media--xl) {
            margin: $spacer--xl;} }

    @if $spacer--xxl != false {
        @include breakpoint($media--xxl) {
            margin: $spacer--xxl;} }
}
// marign left, right and bottom -- no margin top
@mixin margin--default() { // margin left, right and double bottom
    margin: 0 $spacer 2*$spacer;

    @if $spacer--s != false {
        @include breakpoint($media--s) {
            margin: 0 $spacer--s 2*$spacer--s; } }

    @if $spacer--m != false {
        @include breakpoint($media--m) {
            margin: 0 $spacer--m 2*$spacer--m;} }

    @if $spacer--l != false {
        @include breakpoint($media--l) {
            margin: 0 $spacer--l 2*$spacer--l;} }

    @if $spacer--xl != false {
        @include breakpoint($media--xl) {
            margin: 0 $spacer--xl 2*$spacer--xl;} }

    @if $spacer--xxl != false {
        @include breakpoint($media--xxl) {
            margin: 0 $spacer--xxl 2*$spacer--xxl;} }
}
// margin on sides
@mixin margin--horizontal(){
    margin-left: $spacer;
    margin-right: $spacer;

    @if $spacer--s != false {
        @include breakpoint($media--s) {
            margin-left: $spacer--s;
            margin-right: $spacer--s; } }

    @if $spacer--m != false {
        @include breakpoint($media--m) {
            margin-left: $spacer--m;
            margin-right: $spacer--m; } }

    @if $spacer--l != false {
        @include breakpoint($media--l) {
            margin-left: $spacer--l;
            margin-right: $spacer--l; } }

    @if $spacer--xl != false {
        @include breakpoint($media--xl) {
            margin-left: $spacer--xl;
            margin-right: $spacer--xl; } }

    @if $spacer--xxl != false {
        @include breakpoint($media--xxl) {
            margin-left: $spacer--xxl;
            margin-right: $spacer--xxl; } }
}


/* GRIDS -- Padding -- no margin - don't use backgrounds and/or borders if not fluid
=============================================================================== */
@mixin grid            ($default:12, $s:false, $m:false, $l:false, $xl:false, $xxl:false, $cols:12) {
    @include padding;
    @include width($default, $s, $m, $l, $xl, $xxl, $cols );
    @include jacket(ie) { float: left; }
}
@mixin grid--default   ($default:12, $s:false, $m:false, $l:false, $xl:false, $xxl:false, $cols:12) {
    @include padding--default;
    @include width($default, $s, $m, $l, $xl, $xxl, $cols );
    @include jacket(ie) { float: left; }
}
@mixin grid--horizontal($default:12, $s:false, $m:false, $l:false, $xl:false, $xxl:false, $cols:12) {
    @include padding--horizontal;
    @include width($default, $s, $m, $l, $xl, $xxl, $cols );
    @include jacket(ie) { float: left; }
}
@mixin grid--nospace   ($default:12, $s:false, $m:false, $l:false, $xl:false, $xxl:false, $cols:12) {
    @include width($default, $s, $m, $l, $xl, $xxl, $cols );
    @include jacket(ie) { float: left; }
}
/* Grid collapses outer padding --- todo NOT TESTED */
@mixin grid--collapse($default:12, $s:false, $m:false, $l:false, $xl:false, $xxl:false, $cols:12) {
    @include width($default, $s, $m, $l, $xl, $xxl, $cols );
    margin-left: $spacer * -1;
    margin-right: $spacer * -1;

    @if $spacer--s != false {
        @include breakpoint($media--s) {
            margin-left: $spacer--s * -1;
            margin-right: $spacer--s * -1; } }

    @if $spacer--m != false {
        @include breakpoint($media--m) {
            margin-left: $spacer--m * -1;
            margin-right: $spacer--m * -1; } }

    @if $spacer--l != false {
        @include breakpoint($media--l) {
            margin-left: $spacer--l * -1;
            margin-right: $spacer--l * -1; } }

    @if $spacer--xl != false {
        @include breakpoint($media--xl) {
            margin-left: $spacer--xl * -1;
            margin-right: $spacer--xl * -1; } }

    @if $spacer--xxl != false {
        @include breakpoint($media--xxl) {
            margin-left: $spacer--xxl * -1;
            margin-right: $spacer--xxl * -1; } }
}


/* CARDS -- Margin & Padding-- use for Cards, Backgrounds, Borders
=============================================================================== */
@mixin card             ($default:12, $s:false, $m:false, $l:false, $xl:false, $xxl:false, $cols:12) {
    @include margin();
    @include padding;
    @include width--card($default, $s, $m, $l, $xl, $xxl, $cols);

    @include jacket(ie) { // IE9 fallback
        float: left;
    }
}
@mixin card--default    ($default:12, $s:false, $m:false, $l:false, $xl:false, $xxl:false, $cols:12) {
    @include margin--default();
    @include padding();
    @include width--card($default, $s, $m, $l, $xl, $xxl, $cols);

    @include jacket(ie) { // IE9 fallback
        float: left;
    }
}
@mixin card--horizontal ($default:12, $s:false, $m:false, $l:false, $xl:false, $xxl:false, $cols:12) {
    @include margin--horizontal();
    @include padding();
    @include width--card($default, $s, $m, $l, $xl, $xxl, $cols);

    @include jacket(ie) { // IE9 fallback
        float: left;
    }
}
@mixin card--nospace    ($default:12, $s:false, $m:false, $l:false, $xl:false, $xxl:false, $cols:12) {
    @include margin--horizontal();
    @include width--card($default, $s, $m, $l, $xl, $xxl, $cols);

    @include jacket(ie) { // IE9 fallback
        float: left;
    }
}


/* CLEARFIX
=============================================================================== */
@mixin clearfix {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}


/* STANDARD CLASSES
=============================================================================== */
@include jacket(default) {

    .container {
        @include container;
    }

    .container--nospace {
        @include container--nospace;
    }

    .container--fluid {
        @include container--fluid;
    }

    .grid {
        @include grid(12);
    }
    .grid--default {
        @include grid--default(12);
    }
    .padding {
        @include padding(1,1,1,1);
    }
}


